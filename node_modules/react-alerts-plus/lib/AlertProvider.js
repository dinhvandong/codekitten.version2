"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactDom = require("react-dom");

var _reactTransitionGroup = require("react-transition-group");

var _reactSizes = _interopRequireDefault(require("react-sizes"));

var _AlertContext = _interopRequireDefault(require("./AlertContext"));

var _getPositionStyles = _interopRequireDefault(require("./getPositionStyles"));

var _AlertContainer = _interopRequireDefault(require("./AlertContainer"));

var _Alert = _interopRequireDefault(require("./Alert"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var defaultStyle = {
  transition: 'opacity 1000ms ease-in-out',
  opacity: 0
};
var transitionStyles = {
  entering: {
    opacity: 0
  },
  entered: {
    opacity: 1
  }
};

var AlertProvider =
/*#__PURE__*/
function (_React$Component) {
  _inherits(AlertProvider, _React$Component);

  function AlertProvider() {
    var _this;

    _classCallCheck(this, AlertProvider);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(AlertProvider).call(this));

    _defineProperty(_assertThisInitialized(_this), "getPosition", function (position) {
      switch (position) {
        case 'top left':
          return 'topLeft';

        case 'top center':
          return 'topCenter';

        case 'top right':
          return 'topRight';

        case 'bottom left':
          return 'bottomLeft';

        case 'bottom center':
          return 'bottomCenter';

        case 'bottom right':
          return 'bottomRight';

        default:
          throw new Error("Invalid position prop ".concat(position));
      }
    });

    _defineProperty(_assertThisInitialized(_this), "show", function (_ref, AlertComponent) {
      var _ref$message = _ref.message,
          message = _ref$message === void 0 ? 'Default alert message' : _ref$message,
          _ref$style = _ref.style,
          style = _ref$style === void 0 ? {} : _ref$style,
          _ref$duration = _ref.duration,
          duration = _ref$duration === void 0 ? 0 : _ref$duration,
          id = _ref.id,
          _ref$position = _ref.position,
          position = _ref$position === void 0 ? 'top left' : _ref$position,
          _ref$offset = _ref.offset,
          offset = _ref$offset === void 0 ? '10px' : _ref$offset,
          _ref$theme = _ref.theme,
          theme = _ref$theme === void 0 ? 'light' : _ref$theme,
          _ref$showProgressBar = _ref.showProgressBar,
          showProgressBar = _ref$showProgressBar === void 0 ? true : _ref$showProgressBar,
          _ref$progressBarColor = _ref.progressBarColor,
          progressBarColor = _ref$progressBarColor === void 0 ? 'cornflowerblue' : _ref$progressBarColor;
      var key = Math.random();
      var randomId = Math.random().toString(36).substring(7);

      var alertPosition = _this.getPosition(position);

      _this.setState(function (state) {
        if (alertPosition.startsWith('top')) {
          return _objectSpread({}, state, {
            zIndex: style.zIndex,
            alertContainers: _objectSpread({}, state.alertContainers, _defineProperty({}, alertPosition, {
              offset: offset,
              alerts: [{
                duration: duration,
                id: id || randomId,
                key: key,
                message: message,
                position: position,
                style: style,
                AlertComponent: AlertComponent,
                theme: theme,
                showProgressBar: showProgressBar,
                progressBarColor: progressBarColor
              }].concat(_toConsumableArray(state.alertContainers[alertPosition].alerts))
            }))
          });
        }

        return _objectSpread({}, state, {
          zIndex: style.zIndex,
          alertContainers: _objectSpread({}, state.alertContainers, _defineProperty({}, alertPosition, {
            offset: offset,
            alerts: _toConsumableArray(state.alertContainers[alertPosition].alerts).concat([{
              duration: duration,
              id: id || randomId,
              key: key,
              message: message,
              position: position,
              style: style,
              AlertComponent: AlertComponent,
              theme: theme,
              showProgressBar: showProgressBar,
              progressBarColor: progressBarColor
            }])
          }))
        });
      });

      return id || randomId;
    });

    _defineProperty(_assertThisInitialized(_this), "close", function (removeId) {
      _this.setState(function (state) {
        return _objectSpread({}, state, {
          alertContainers: Object.entries(state.alertContainers).reduce(function (acc, _ref2) {
            var _ref3 = _slicedToArray(_ref2, 2),
                containerName = _ref3[0],
                containerValue = _ref3[1];

            return _objectSpread({}, acc, _defineProperty({}, containerName, _objectSpread({}, containerValue, {
              alerts: containerValue.alerts.filter(function (_ref4) {
                var id = _ref4.id;
                return id !== removeId;
              })
            })));
          }, {})
        });
      });
    });

    _this.state = {
      root: null,
      isMobile: false,
      zIndex: 100,
      alertContainers: {
        topLeft: {
          offset: '10px',
          alerts: []
        },
        topCenter: {
          offset: '10px',
          alerts: []
        },
        topRight: {
          offset: '10px',
          alerts: []
        },
        bottomLeft: {
          offset: '10px',
          alerts: []
        },
        bottomCenter: {
          offset: '10px',
          alerts: []
        },
        bottomRight: {
          offset: '10px',
          alerts: []
        }
      }
    };
    return _this;
  }

  _createClass(AlertProvider, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var root = document.createElement('div');
      document.body.appendChild(root);
      this.setState({
        root: root
      });
      var isMobile = this.props.isMobile;
      this.setState({
        isMobile: isMobile
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var children = this.props.children;
      var _this$state = this.state,
          alertContainers = _this$state.alertContainers,
          root = _this$state.root,
          isMobile = _this$state.isMobile,
          zIndex = _this$state.zIndex;
      var alert = {
        show: this.show,
        close: this.close
      };
      return _react["default"].createElement(_AlertContext["default"].Provider, {
        value: alert
      }, children, root && (0, _reactDom.createPortal)(_react["default"].createElement(_react["default"].Fragment, null, Object.keys(alertContainers).map(function (position) {
        return alertContainers[position].alerts.length ? _react["default"].createElement(_AlertContainer["default"], {
          key: position,
          style: (0, _getPositionStyles["default"])(position, alertContainers[position].offset, isMobile, zIndex)
        }, _react["default"].createElement(_reactTransitionGroup.TransitionGroup, null, alertContainers[position].alerts.map(function (a) {
          /**
           * TODO: Try to find another way to expire alerts when
           *       their duration is up.
           *
           * TODO: Remove transition from custom alert component?
           *       allowing users to pass their component wrapped
           *       in their own custom Transition effect?
           */
          if (a.duration !== 0) {
            setTimeout(function () {
              return _this2.close(a.id);
            }, a.duration);
          }

          var AlertComponent = a.AlertComponent;

          if (AlertComponent) {
            return _react["default"].createElement(_reactTransitionGroup.Transition, {
              key: a.key,
              timeout: 100,
              appear: true
            }, function (state) {
              return _react["default"].createElement(AlertComponent, {
                close: function close() {
                  return _this2.close(a.id);
                },
                key: a.key,
                id: a.id,
                transitionStyle: _objectSpread({}, defaultStyle, {}, transitionStyles[state]),
                state: state,
                alertTimeout: a.duration,
                showProgressBar: a.showProgressBar,
                progressBarColor: a.progressBarColor
              });
            });
          }

          return _react["default"].createElement(_reactTransitionGroup.Transition, {
            key: a.key,
            timeout: 100,
            appear: true
          }, function (state) {
            return _react["default"].createElement(_Alert["default"], {
              key: a.key,
              alert: a,
              close: _this2.close,
              transitionStyle: _objectSpread({}, defaultStyle, {}, transitionStyles[state]),
              state: state,
              alertTimeout: a.duration,
              showProgressBar: a.showProgressBar,
              progressBarColor: a.progressBarColor,
              isMobile: isMobile
            });
          });
        }))) : null;
      })), root));
    }
  }]);

  return AlertProvider;
}(_react["default"].Component);

AlertProvider.propTypes = {
  children: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].node), _propTypes["default"].node]).isRequired,
  isMobile: _propTypes["default"].bool.isRequired
};

var mapSizesToProps = function mapSizesToProps(_ref5) {
  var width = _ref5.width;
  return {
    isMobile: width < 600
  };
};

var _default = (0, _reactSizes["default"])(mapSizesToProps)(AlertProvider);

exports["default"] = _default;