"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactIconsKit = require("react-icons-kit");

var _ic_close = require("react-icons-kit/md/ic_close");

var _AlertTemplates = require("./AlertTemplates");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Alert =
/*#__PURE__*/
function (_React$PureComponent) {
  _inherits(Alert, _React$PureComponent);

  function Alert() {
    _classCallCheck(this, Alert);

    return _possibleConstructorReturn(this, _getPrototypeOf(Alert).apply(this, arguments));
  }

  _createClass(Alert, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          _this$props$alert = _this$props.alert,
          style = _this$props$alert.style,
          id = _this$props$alert.id,
          message = _this$props$alert.message,
          theme = _this$props$alert.theme,
          progressBarColor = _this$props$alert.progressBarColor,
          close = _this$props.close,
          transitionStyle = _this$props.transitionStyle,
          showProgressBar = _this$props.showProgressBar,
          alertTimeout = _this$props.alertTimeout,
          state = _this$props.state,
          isMobile = _this$props.isMobile;
      var selectedTheme = theme === 'dark' ? _objectSpread({}, _AlertTemplates.dark, {}, style) : _objectSpread({}, _AlertTemplates.light, {}, style);

      if (isMobile) {
        selectedTheme = _AlertTemplates.mobileLight;

        if (theme === 'dark') {
          selectedTheme = _AlertTemplates.mobileDark;
        }
      }

      var progressStyle = {
        transition: "width ".concat(alertTimeout, "ms ease-in-out"),
        width: '0px'
      };
      var progressTransitionStyles = {
        entering: {
          width: '0px'
        },
        entered: {
          width: '100%'
        }
      };
      return _react["default"].createElement("div", {
        id: id,
        "data-testid": id,
        style: _objectSpread({}, selectedTheme, {
          display: 'flex'
        }, transitionStyle)
      }, _react["default"].createElement("span", {
        style: {
          marginRight: '20px',
          paddingRight: '20px'
        }
      }, message), _react["default"].createElement(_reactIconsKit.Icon, {
        size: 20,
        icon: _ic_close.ic_close,
        style: {
          position: 'absolute',
          right: '20px'
        },
        onClick: function onClick() {
          return close(id);
        }
      }), alertTimeout === 0 ? null : showProgressBar && _react["default"].createElement("div", {
        style: _objectSpread({
          height: '10px',
          backgroundColor: "".concat(progressBarColor),
          position: 'absolute',
          bottom: '0px',
          left: '0px'
        }, progressStyle, {}, progressTransitionStyles[state])
      }));
    }
  }]);

  return Alert;
}(_react["default"].PureComponent);

Alert.propTypes = {
  alert: _propTypes["default"].shape({
    id: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
    message: _propTypes["default"].string,
    position: _propTypes["default"].string,
    theme: _propTypes["default"].string,
    progressBarColor: _propTypes["default"].string,
    style: _propTypes["default"].shape({
      position: _propTypes["default"].string.isRequired,
      top: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
      right: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
      bottom: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
      left: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
      transform: _propTypes["default"].string,
      zIndex: _propTypes["default"].number
    })
  }).isRequired,
  close: _propTypes["default"].func.isRequired,
  transitionStyle: _propTypes["default"].shape(),
  showProgressBar: _propTypes["default"].bool.isRequired,
  alertTimeout: _propTypes["default"].number.isRequired,
  state: _propTypes["default"].string.isRequired,
  isMobile: _propTypes["default"].bool.isRequired
};
Alert.defaultProps = {
  transitionStyle: {}
};
var _default = Alert;
exports["default"] = _default;